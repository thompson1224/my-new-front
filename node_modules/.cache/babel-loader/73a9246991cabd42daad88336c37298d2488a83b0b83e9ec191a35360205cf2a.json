{"ast":null,"code":"export default {\n  data() {\n    return {\n      newProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        pointprice: 0,\n        bonuspoint: 0,\n        stock: 0\n      },\n      products: []\n    };\n  },\n  methods: {\n    async addProduct() {\n      try {\n        const response = await fetch('http://localhost:3000/add-product', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.newProduct)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.getProducts(); // 상품 추가 후 목록 갱신\n          alert('상품이 추가되었습니다.');\n        } else {\n          alert(data.error);\n        }\n\n        // 폼 초기화\n        this.newProduct.name = '';\n        this.newProduct.description = '';\n        this.newProduct.price = 0;\n        this.newProduct.bonuspoint = 0;\n        this.newProduct.pointprice = 0;\n        this.newProduct.stock = 0;\n      } catch (error) {\n        console.error('상품 추가 실패:', error);\n        alert('상품 추가에 실패했습니다.');\n      }\n    },\n    async getProducts() {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const data = await response.json();\n        this.products = data;\n      } catch (error) {\n        console.error('상품 목록 불러오기 실패:', error);\n      }\n    }\n  },\n  created() {\n    this.getProducts(); // 페이지가 로드될 때 상품 목록을 가져옴\n  }\n};","map":{"version":3,"names":["data","newProduct","name","description","price","pointprice","bonuspoint","stock","products","methods","addProduct","response","fetch","method","headers","body","JSON","stringify","json","ok","getProducts","alert","error","console","created"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\components\\AddProduct.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>상품 추가</h2>\r\n    <form @submit.prevent=\"addProduct\">\r\n      <div>\r\n        <label for=\"name\">상품명:</label>\r\n        <input v-model=\"newProduct.name\" type=\"text\" id=\"name\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"description\">설명:</label>\r\n        <textarea v-model=\"newProduct.description\" id=\"description\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"price\">가격:</label>\r\n        <input v-model=\"newProduct.price\" type=\"number\" id=\"price\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">포인트 가격:</label>\r\n        <input v-model=\"newProduct.pointprice\" type=\"number\" id=\"pointprice\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">적립포인트:</label>\r\n        <input v-model=\"newProduct.bonuspoint\" type=\"number\" id=\"bonuspoint\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">재고:</label>\r\n        <input v-model=\"newProduct.stock\" type=\"number\" id=\"stock\" required />\r\n      </div>\r\n      <button type=\"submit\">상품 추가</button>\r\n    </form>\r\n\r\n    <h2>상품 목록</h2>\r\n    <ul>\r\n      <li v-for=\"product in products\" :key=\"product.id\">\r\n        <h3>{{ product.name }}</h3>\r\n        <p>{{ product.description }}</p>\r\n        <p>가격: {{ product.price }}원</p>\r\n        <p>재고: {{ product.stock }}개</p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newProduct: {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        pointprice: 0,      \r\n        bonuspoint: 0,\r\n        stock: 0\r\n      },\r\n      products: []\r\n    };\r\n  },\r\n  methods: {\r\n    async addProduct() {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/add-product', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(this.newProduct)\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          this.getProducts();  // 상품 추가 후 목록 갱신\r\n          alert('상품이 추가되었습니다.');\r\n        } else {\r\n          alert(data.error);\r\n        }\r\n\r\n        // 폼 초기화\r\n        this.newProduct.name = '';\r\n        this.newProduct.description = '';\r\n        this.newProduct.price = 0;\r\n        this.newProduct.bonuspoint = 0;\r\n        this.newProduct.pointprice = 0;\r\n        this.newProduct.stock = 0;\r\n      } catch (error) {\r\n        console.error('상품 추가 실패:', error);\r\n        alert('상품 추가에 실패했습니다.');\r\n      }\r\n    },\r\n    async getProducts() {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/products');\r\n        const data = await response.json();\r\n        this.products = data;\r\n      } catch (error) {\r\n        console.error('상품 목록 불러오기 실패:', error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts(); // 페이지가 로드될 때 상품 목록을 가져옴\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일 추가 */\r\nform {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput, textarea {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":"AA4CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,CAAC;QACRC,UAAU,EAAE,CAAC;QACbC,UAAU,EAAE,CAAC;QACbC,KAAK,EAAE;MACT,CAAC;MACDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChB,UAAU;QACtC,CAAC,CAAC;QAEF,MAAMD,IAAG,GAAI,MAAMW,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf,IAAI,CAACC,WAAW,CAAC,CAAC,EAAG;UACrBC,KAAK,CAAC,cAAc,CAAC;QACvB,OAAO;UACLA,KAAK,CAACrB,IAAI,CAACsB,KAAK,CAAC;QACnB;;QAEA;QACA,IAAI,CAACrB,UAAU,CAACC,IAAG,GAAI,EAAE;QACzB,IAAI,CAACD,UAAU,CAACE,WAAU,GAAI,EAAE;QAChC,IAAI,CAACF,UAAU,CAACG,KAAI,GAAI,CAAC;QACzB,IAAI,CAACH,UAAU,CAACK,UAAS,GAAI,CAAC;QAC9B,IAAI,CAACL,UAAU,CAACI,UAAS,GAAI,CAAC;QAC9B,IAAI,CAACJ,UAAU,CAACM,KAAI,GAAI,CAAC;MAC3B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCD,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF,CAAC;IACD,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,MAAMZ,IAAG,GAAI,MAAMW,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI,CAACV,QAAO,GAAIR,IAAI;MACtB,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,WAAW,CAAC,CAAC,EAAE;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}