{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"상품 추가\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.addProduct && $options.addProduct(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"상품명:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newProduct.name = $event),\n    type: \"text\",\n    id: \"name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.name]])]), _createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"description\"\n  }, \"설명:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newProduct.description = $event),\n    id: \"description\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.description]])]), _createElementVNode(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"price\"\n  }, \"가격:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newProduct.price = $event),\n    type: \"number\",\n    id: \"price\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.price]])]), _createElementVNode(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"stock\"\n  }, \"적립포인트:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newProduct.getpoint = $event),\n    type: \"number\",\n    id: \"getpoint\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.getpoint]])]), _createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"stock\"\n  }, \"포인트 가격:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newProduct.pointprice = $event),\n    type: \"number\",\n    id: \"pointprice\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.pointprice]])]), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"stock\"\n  }, \"재고:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newProduct.stock = $event),\n    type: \"number\",\n    id: \"stock\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newProduct.stock]])]), _cache[13] || (_cache[13] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"상품 추가\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"상품 목록\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: product.id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"가격: \" + _toDisplayString(product.price) + \"원\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"재고: \" + _toDisplayString(product.stock) + \"개\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addProduct","for","$event","$data","newProduct","name","type","id","required","description","price","getpoint","pointprice","stock","_Fragment","_renderList","products","product","key","_toDisplayString"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\components\\AddProduct.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>상품 추가</h2>\r\n    <form @submit.prevent=\"addProduct\">\r\n      <div>\r\n        <label for=\"name\">상품명:</label>\r\n        <input v-model=\"newProduct.name\" type=\"text\" id=\"name\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"description\">설명:</label>\r\n        <textarea v-model=\"newProduct.description\" id=\"description\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label for=\"price\">가격:</label>\r\n        <input v-model=\"newProduct.price\" type=\"number\" id=\"price\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">적립포인트:</label>\r\n        <input v-model=\"newProduct.getpoint\" type=\"number\" id=\"getpoint\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">포인트 가격:</label>\r\n        <input v-model=\"newProduct.pointprice\" type=\"number\" id=\"pointprice\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"stock\">재고:</label>\r\n        <input v-model=\"newProduct.stock\" type=\"number\" id=\"stock\" required />\r\n      </div>\r\n      <button type=\"submit\">상품 추가</button>\r\n    </form>\r\n\r\n    <h2>상품 목록</h2>\r\n    <ul>\r\n      <li v-for=\"product in products\" :key=\"product.id\">\r\n        <h3>{{ product.name }}</h3>\r\n        <p>{{ product.description }}</p>\r\n        <p>가격: {{ product.price }}원</p>\r\n        <p>재고: {{ product.stock }}개</p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newProduct: {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        getpoint: 0,\r\n        pointprice: 0,      \r\n        stock: 0\r\n      },\r\n      products: []\r\n    };\r\n  },\r\n  methods: {\r\n    async addProduct() {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/add-product', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(this.newProduct)\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          this.getProducts();  // 상품 추가 후 목록 갱신\r\n          alert('상품이 추가되었습니다.');\r\n        } else {\r\n          alert(data.error);\r\n        }\r\n\r\n        // 폼 초기화\r\n        this.newProduct.name = '';\r\n        this.newProduct.description = '';\r\n        this.newProduct.price = 0;\r\n        this.newProduct.pointprice = 0;\r\n        this.newProduct.getpoint = 0;\r\n        this.newProduct.stock = 0;\r\n      } catch (error) {\r\n        console.error('상품 추가 실패:', error);\r\n        alert('상품 추가에 실패했습니다.');\r\n      }\r\n    },\r\n    async getProducts() {\r\n      try {\r\n        const response = await fetch('/products');\r\n        const data = await response.json();\r\n        this.products = data;\r\n      } catch (error) {\r\n        console.error('상품 목록 불러오기 실패:', error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getProducts(); // 페이지가 로드될 때 상품 목록을 가져옴\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일 추가 */\r\nform {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput, textarea {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}