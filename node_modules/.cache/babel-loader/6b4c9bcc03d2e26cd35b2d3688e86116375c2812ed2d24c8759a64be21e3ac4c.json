{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      email: '',\n      password: '',\n      debugInfo: null\n    };\n  },\n  methods: {\n    async login() {\n      console.log(this.email, this.password);\n      console.log('로그인 요청 시작'); // 확인용 로그 추가\n      try {\n        const response = await axios.post('http://localhost:3000/login', {\n          email: this.email,\n          password: this.password\n        });\n        console.log('응답 데이터:', response.data); // 응답 데이터 로그 확인\n        localStorage.setItem('token', response.data.token); // 토큰 저장\n        console.log('토큰 저장 완료'); // 로그 추가\n\n        this.$router.push({\n          name: 'MainPage'\n        }); // 라우트 리디렉션\n        console.log('리디렉션 요청 완료'); // 로그 추가\n      } catch (error) {\n        console.error('로그인 실패:', error); // 에러 로그 확인\n        alert('로그인 실패');\n      }\n    }\n  },\n  methods: {\n    async login() {\n      this.debugInfo = {\n        email: this.email,\n        password: this.password,\n        message: '로그인 요청 시작'\n      };\n      console.log('로그인 요청 시작', this.debugInfo);\n      // 이후 로그인 처리 로직...\n    }\n  },\n  // 컴포넌트 마운트 시 라우터 상태 확인\n  mounted() {\n    console.log('Current route:', this.$route);\n    console.log('Router instance:', this.$router);\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","debugInfo","methods","login","console","log","response","post","localStorage","setItem","token","$router","push","error","alert","message","mounted","$route"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\Login.vue"],"sourcesContent":["// Login.vue\r\n<template>\r\n  <div>\r\n    <h1>로그인</h1>\r\n    <form @submit.prevent=\"login\">\r\n      <input v-model=\"email\" placeholder=\"Email\" required />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n    <!-- 디버깅을 위한 상태 표시 -->\r\n    <div v-if=\"debugInfo\" style=\"margin-top: 20px; color: gray;\">\r\n      <pre>{{ debugInfo }}</pre>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-if=\"debugInfo\" style=\"margin-top: 20px; color: gray;\">\r\n  <pre>{{ debugInfo }}</pre>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserLogin',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      debugInfo: null\r\n    }\r\n  },\r\n  methods: {\r\n  async login() {\r\n    console.log(this.email, this.password)\r\n    console.log('로그인 요청 시작'); // 확인용 로그 추가\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/login', {\r\n        email: this.email,\r\n        password: this.password,\r\n      });\r\n\r\n      console.log('응답 데이터:', response.data); // 응답 데이터 로그 확인\r\n      localStorage.setItem('token', response.data.token); // 토큰 저장\r\n      console.log('토큰 저장 완료'); // 로그 추가\r\n\r\n      this.$router.push({ name: 'MainPage' }); // 라우트 리디렉션\r\n      console.log('리디렉션 요청 완료'); // 로그 추가\r\n    } catch (error) {\r\n      console.error('로그인 실패:', error); // 에러 로그 확인\r\n      alert('로그인 실패');\r\n    }\r\n  },\r\n},\r\n\r\nmethods: {\r\n  async login() {\r\n    this.debugInfo = {\r\n      email: this.email,\r\n      password: this.password,\r\n      message: '로그인 요청 시작',\r\n    };\r\n    console.log('로그인 요청 시작', this.debugInfo);\r\n    // 이후 로그인 처리 로직...\r\n  },\r\n},\r\n  // 컴포넌트 마운트 시 라우터 상태 확인\r\n  mounted() {\r\n    console.log('Current route:', this.$route)\r\n    console.log('Router instance:', this.$router)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n}\r\n\r\ninput, button {\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n}\r\n\r\nbutton {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,KAAKA,CAAA,EAAG;MACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,EAAE,IAAI,CAACC,QAAQ;MACrCI,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,EAAE;MAC1B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAE;UAC/DR,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEFI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ,CAACR,IAAI,CAAC,EAAE;QACvCU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACR,IAAI,CAACY,KAAK,CAAC,EAAE;QACpDN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;;QAEzB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC;UAAEf,IAAI,EAAE;QAAW,CAAC,CAAC,EAAE;QACzCO,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;MAC7B,EAAE,OAAOQ,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC,EAAE;QACjCC,KAAK,CAAC,QAAQ,CAAC;MACjB;IACF;EACF,CAAC;EAEDZ,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI,CAACF,SAAQ,GAAI;QACfF,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBe,OAAO,EAAE;MACX,CAAC;MACDX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACJ,SAAS,CAAC;MACxC;IACF;EACF,CAAC;EACC;EACAe,OAAOA,CAAA,EAAG;IACRZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACY,MAAM;IACzCb,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACM,OAAO;EAC9C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}