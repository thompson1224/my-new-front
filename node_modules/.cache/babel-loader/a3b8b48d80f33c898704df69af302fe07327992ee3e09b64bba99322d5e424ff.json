{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserSignup',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      recommenderId: '' // 추천인 ID 필드 추가\n    };\n  },\n  methods: {\n    async signup() {\n      try {\n        // 서버로 보낼 데이터 생성 (추천인 ID가 있을 경우에만 포함)\n        const data = {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        };\n        if (this.recommenderId) {\n          data.recommender_id = this.recommenderId; // 추천인 ID가 있을 경우에만 포함\n        }\n\n        // 회원가입 API 요청\n        await axios.post('http://localhost:3000/signup', data);\n        alert('회원가입 성공');\n      } catch (error) {\n        alert('회원가입 실패');\n        console.error('회원가입 오류:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","email","password","recommenderId","methods","signup","recommender_id","post","alert","error","console"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\Signup.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>회원가입</h1>\r\n    <form @submit.prevent=\"signup\">\r\n      <input v-model=\"username\" placeholder=\"Username\" required />\r\n      <input v-model=\"email\" placeholder=\"Email\" required />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n      <!-- 추천인 ID 입력 필드 추가 -->\r\n      <input v-model=\"recommenderId\" placeholder=\"추천인 ID (선택)\" />\r\n      <button type=\"submit\">회원가입</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserSignup',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      recommenderId: '',  // 추천인 ID 필드 추가\r\n    };\r\n  },\r\n  methods: {\r\n    async signup() {\r\n      try {\r\n        // 서버로 보낼 데이터 생성 (추천인 ID가 있을 경우에만 포함)\r\n        const data = {\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        };\r\n        if (this.recommenderId) {\r\n          data.recommender_id = this.recommenderId;  // 추천인 ID가 있을 경우에만 포함\r\n        }\r\n\r\n        // 회원가입 API 요청\r\n        await axios.post('http://localhost:3000/signup', data);\r\n        alert('회원가입 성공');\r\n      } catch (error) {\r\n        alert('회원가입 실패');\r\n        console.error('회원가입 오류:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE,CAAG;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF;QACA,MAAMN,IAAG,GAAI;UACXC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,IAAI,CAACC,aAAa,EAAE;UACtBJ,IAAI,CAACO,cAAa,GAAI,IAAI,CAACH,aAAa,EAAG;QAC7C;;QAEA;QACA,MAAMN,KAAK,CAACU,IAAI,CAAC,8BAA8B,EAAER,IAAI,CAAC;QACtDS,KAAK,CAAC,SAAS,CAAC;MAClB,EAAE,OAAOC,KAAK,EAAE;QACdD,KAAK,CAAC,SAAS,CAAC;QAChBE,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}