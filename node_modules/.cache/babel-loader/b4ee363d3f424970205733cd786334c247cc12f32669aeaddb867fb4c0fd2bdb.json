{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.product.name), 1 /* TEXT */), $data.product.image ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.product.image,\n    alt: \"상품 이미지\"\n  }, null, 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, \"가격: \" + _toDisplayString($data.product.price) + \"원\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"적립 포인트: \" + _toDisplayString($data.product.bonuspoint) + \"점\", 1 /* TEXT */), _createCommentVNode(\" 적립 포인트 표시 \"), _createCommentVNode(\" 구매 갯수 선택 \"), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"quantity\"\n  }, \"구매 갯수:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"quantity\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.quantity = $event),\n    type: \"number\",\n    min: \"1\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.quantity, void 0, {\n    number: true\n  }]])]), _createCommentVNode(\" 구매 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.buyProduct && $options.buyProduct(...args))\n  }, \"구매하기\"), _createCommentVNode(\" 구매 성공 메시지 \"), $data.successMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","$data","product","name","image","src","alt","_hoisted_1","_createCommentVNode","price","bonuspoint","for","id","_cache","$event","quantity","type","min","number","onClick","args","$options","buyProduct","successMessage","_hoisted_2"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\ProductDetail.vue"],"sourcesContent":["//ProductDetail.vue\r\n\r\n<template>\r\n  <div>\r\n    <h1>{{ product.name }}</h1>\r\n    <img v-if=\"product.image\" :src=\"product.image\" alt=\"상품 이미지\" />\r\n    <p>가격: {{ product.price }}원</p>\r\n    <p>적립 포인트: {{ product.bonuspoint }}점</p> <!-- 적립 포인트 표시 -->\r\n\r\n    <!-- 구매 갯수 선택 -->\r\n    <div>\r\n      <label for=\"quantity\">구매 갯수:</label>\r\n      <input id=\"quantity\" v-model.number=\"quantity\" type=\"number\" min=\"1\" />\r\n    </div>\r\n\r\n    <!-- 구매 버튼 -->\r\n    <button @click=\"buyProduct\">구매하기</button>\r\n\r\n    <!-- 구매 성공 메시지 -->\r\n    <p v-if=\"successMessage\">{{ successMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductDetail',\r\n  data() {\r\n    return {\r\n      product: {}, // 상품 정보\r\n      quantity: 1, // 구매 수량\r\n      successMessage: '', // 성공 메시지\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProduct(); // 상품 정보 가져오기\r\n  },\r\n  methods: {\r\n    async fetchProduct() {\r\n      const productId = this.$route.params.id; // URL에서 상품 ID 가져오기\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/products/${productId}`);\r\n        this.product = response.data;\r\n      } catch (error) {\r\n        console.error('상품 정보를 가져오는 데 실패했습니다:', error);\r\n      }\r\n    },\r\n    async buyProduct() {\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/purchase', {\r\n          productId: this.product.id,\r\n          quantity: this.quantity,\r\n        });\r\n        this.successMessage = `구매 완료! 적립된 포인트: ${response.data.pointsEarned}`;\r\n      } catch (error) {\r\n        console.error('구매에 실패했습니다:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n"],"mappings":";mBAAA;;EAAAA,GAAA;AAAA;;uBAGEC,mBAAA,CAiBM,cAhBJC,mBAAA,CAA2B,YAAAC,gBAAA,CAApBC,KAAA,CAAAC,OAAO,CAACC,IAAI,kBACRF,KAAA,CAAAC,OAAO,CAACE,KAAK,I,cAAxBN,mBAAA,CAA8D;IALlED,GAAA;IAK+BQ,GAAG,EAAEJ,KAAA,CAAAC,OAAO,CAACE,KAAK;IAAEE,GAAG,EAAC;0BALvDC,UAAA,KAAAC,mBAAA,gBAMIT,mBAAA,CAA+B,WAA5B,MAAI,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACO,KAAK,IAAG,GAAC,iBAC3BV,mBAAA,CAAwC,WAArC,UAAQ,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,OAAO,CAACQ,UAAU,IAAG,GAAC,iBAAKF,mBAAA,eAAkB,EAE3DA,mBAAA,cAAiB,EACjBT,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAoC;IAA7BY,GAAG,EAAC;EAAU,GAAC,QAAM,sB,gBAC5BZ,mBAAA,CAAuE;IAAhEa,EAAE,EAAC,UAAU;IAZ1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY2Cb,KAAA,CAAAc,QAAQ,GAAAD,MAAA;IAAEE,IAAI,EAAC,QAAQ;IAACC,GAAG,EAAC;iDAA5BhB,KAAA,CAAAc,QAAQ,E;IAAhBG,MAAM,EAAd;EAAyB,E,MAGhDV,mBAAA,WAAc,EACdT,mBAAA,CAAyC;IAAhCoB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,MAAI,GAEhCZ,mBAAA,eAAkB,EACTP,KAAA,CAAAsB,cAAc,I,cAAvBzB,mBAAA,CAAiD,KAnBrD0B,UAAA,EAAAxB,gBAAA,CAmBgCC,KAAA,CAAAsB,cAAc,oBAnB9Cf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}