{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _cache[0] || (_cache[0] = [_createElementVNode(\"h2\", null, \"추천인 조직도\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    id: \"chart_div\"\n  }, null, -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["_createElementBlock","_cache","_createElementVNode","id"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\components\\OrgChart.vue"],"sourcesContent":["//OrgChart.vue\r\n\r\n<template>\r\n  <div>\r\n    <h2>추천인 조직도</h2>\r\n    <div id=\"chart_div\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'OrgChart',\r\n  data() {\r\n    return {\r\n      hierarchyData: [], // API에서 가져온 추천인 계층 데이터\r\n    };\r\n  },\r\n  async mounted() {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/users/hierarchy', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`, // 인증 토큰 전달\r\n        },\r\n      });\r\n      \r\n      // 응답 데이터가 올바르게 가져와졌는지 확인\r\n      console.log('API 응답 데이터:', response.data);\r\n\r\n      this.hierarchyData = response.data; // 서버에서 계층 데이터를 가져옴\r\n      this.drawChart(); // 조직도 그리기 함수 호출\r\n    } catch (error) {\r\n      console.error('조직도 데이터를 가져오는 중 오류 발생:', error);\r\n      if (error.response) {\r\n        console.error('Response error:', error.response.data);\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response headers:', error.response.headers);\r\n      } else if (error.request) {\r\n        console.error('Request error:', error.request);\r\n      } else {\r\n        console.error('Error message:', error.message);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    drawChart() {\r\n      // Google Charts 로드 확인\r\n      if (typeof google === 'undefined') {\r\n        console.error('Google Charts 라이브러리가 로드되지 않았습니다.');\r\n        return;\r\n      }\r\n\r\n      google.charts.load('current', { packages: ['orgchart'] });\r\n      google.charts.setOnLoadCallback(() => {\r\n        const data = new google.visualization.DataTable();\r\n        data.addColumn('string', 'Name');\r\n        data.addColumn('string', 'Manager');\r\n        data.addColumn('string', 'ToolTip');\r\n\r\n        // API 데이터를 Google Charts 형식으로 변환\r\n        this.hierarchyData.forEach((user) => {\r\n          if (!user.user_name || !user.recommender_name) {\r\n            console.warn('데이터 형식에 문제가 있는 항목:', user);\r\n          }\r\n\r\n          data.addRow([ \r\n            user.user_name, \r\n            user.recommender_name || '', // 추천인이 없으면 루트 노드\r\n            `${user.user_level} (${user.join_date})` \r\n          ]);\r\n        });\r\n\r\n        // 차트를 그리기 위한 준비가 되었는지 확인\r\n        if (this.hierarchyData.length === 0) {\r\n          console.warn('조직도에 표시할 데이터가 없습니다.');\r\n        }\r\n\r\n        const chart = new google.visualization.OrgChart(document.getElementById('chart_div'));\r\n        chart.draw(data, { allowHtml: true });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#chart_div {\r\n  margin: 20px auto;\r\n  width: 80%;\r\n  height: auto;\r\n}\r\n</style>\r\n"],"mappings":";;uBAGEA,mBAAA,CAGM,aAAAC,MAAA,QAAAA,MAAA,OAFJC,mBAAA,CAAgB,YAAZ,SAAO,qBACXA,mBAAA,CAA0B;IAArBC,EAAE,EAAC;EAAW,2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}