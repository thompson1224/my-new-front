{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductDetail',\n  data() {\n    return {\n      product: {},\n      // 상품 정보\n      quantity: 1,\n      // 구매 갯수\n      successMessage: '' // 구매 성공 메시지\n    };\n  },\n  created() {\n    // 상품 ID를 기반으로 상세 정보 가져오기\n    const productId = this.$route.params.id;\n    this.fetchProduct(productId);\n  },\n  methods: {\n    async fetchProduct(productId) {\n      try {\n        const response = await axios.get(`http://localhost:3000/products/${productId}`);\n        this.product = response.data;\n      } catch (error) {\n        console.error('상품 정보를 가져오는 데 실패했습니다:', error);\n      }\n    },\n    async buyProduct() {\n      try {\n        const response = await axios.post(`http://localhost:3000/purchase`, {\n          productId: this.product.id,\n          quantity: this.quantity\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.successMessage = '구매가 완료되었습니다!';\n        console.log(response.data); // 구매 결과 출력 (포인트 적립 내역 포함)\n      } catch (error) {\n        console.error('구매를 처리하는 데 실패했습니다:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","product","quantity","successMessage","created","productId","$route","params","id","fetchProduct","methods","response","get","error","console","buyProduct","post","headers","Authorization","localStorage","getItem","log"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\ProductDetail.vue"],"sourcesContent":["//ProductDetail.vue\r\n\r\n<template>\r\n  <div>\r\n    <h1>{{ product.name }}</h1>\r\n    <img v-if=\"product.image\" :src=\"product.image\" alt=\"상품 이미지\" />\r\n    <p>가격: {{ product.price }}원</p>\r\n\r\n    <!-- 구매 갯수 선택 -->\r\n    <div>\r\n      <label for=\"quantity\">구매 갯수:</label>\r\n      <input id=\"quantity\" v-model.number=\"quantity\" type=\"number\" min=\"1\" />\r\n    </div>\r\n\r\n    <!-- 구매 버튼 -->\r\n    <button @click=\"buyProduct\">구매하기</button>\r\n\r\n    <!-- 구매 성공 메시지 -->\r\n    <p v-if=\"successMessage\">{{ successMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductDetail',\r\n  data() {\r\n    return {\r\n      product: {}, // 상품 정보\r\n      quantity: 1, // 구매 갯수\r\n      successMessage: '', // 구매 성공 메시지\r\n    };\r\n  },\r\n  created() {\r\n    // 상품 ID를 기반으로 상세 정보 가져오기\r\n    const productId = this.$route.params.id;\r\n    this.fetchProduct(productId);\r\n  },\r\n  methods: {\r\n    async fetchProduct(productId) {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/products/${productId}`);\r\n        this.product = response.data;\r\n      } catch (error) {\r\n        console.error('상품 정보를 가져오는 데 실패했습니다:', error);\r\n      }\r\n    },\r\n    async buyProduct() {\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:3000/purchase`,\r\n          {\r\n            productId: this.product.id,\r\n            quantity: this.quantity,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        this.successMessage = '구매가 완료되었습니다!';\r\n        console.log(response.data); // 구매 결과 출력 (포인트 적립 내역 포함)\r\n      } catch (error) {\r\n        console.error('구매를 처리하는 데 실패했습니다:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 원하는 스타일 추가 */\r\n</style>\r\n\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MAAE;MACbC,QAAQ,EAAE,CAAC;MAAE;MACbC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IACvC,IAAI,CAACC,YAAY,CAACJ,SAAS,CAAC;EAC9B,CAAC;EACDK,OAAO,EAAE;IACP,MAAMD,YAAYA,CAACJ,SAAS,EAAE;MAC5B,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,kCAAkCP,SAAS,EAAE,CAAC;QAC/E,IAAI,CAACJ,OAAM,GAAIU,QAAQ,CAACX,IAAI;MAC9B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMb,KAAK,CAACkB,IAAI,CAC/B,gCAAgC,EAChC;UACEX,SAAS,EAAE,IAAI,CAACJ,OAAO,CAACO,EAAE;UAC1BN,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EACD;UACEe,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CACF,CAAC;QAED,IAAI,CAACjB,cAAa,GAAI,cAAc;QACpCW,OAAO,CAACO,GAAG,CAACV,QAAQ,CAACX,IAAI,CAAC,EAAE;MAC9B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}