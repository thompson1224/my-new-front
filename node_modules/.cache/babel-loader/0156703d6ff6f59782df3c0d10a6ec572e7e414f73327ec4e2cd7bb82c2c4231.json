{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"max\"];\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"상품 상세\", -1 /* HOISTED */)), $data.product ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.product.image ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.product.image,\n    alt: \"상품 이미지\",\n    class: \"product-image\"\n  }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h3\", null, _toDisplayString($data.product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.product.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"가격: \" + _toDisplayString($data.product.price) + \"원\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"재고: \" + _toDisplayString($data.product.stock) + \"개\", 1 /* TEXT */), _createCommentVNode(\" 구매 기능 \"), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"quantity\"\n  }, \"구매 수량:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.quantity = $event),\n    type: \"number\",\n    id: \"quantity\",\n    min: \"1\",\n    max: $data.product.stock\n  }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, $data.quantity, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.purchaseProduct && $options.purchaseProduct(...args))\n  }, \"구매하기\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[3] || (_cache[3] = [_createElementVNode(\"p\", null, \"상품 정보를 불러오는 중...\", -1 /* HOISTED */)])))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","product","_hoisted_1","image","src","alt","class","_hoisted_2","_createCommentVNode","_toDisplayString","name","description","price","stock","for","_cache","$event","quantity","type","id","min","max","_hoisted_3","number","onClick","args","$options","purchaseProduct","_hoisted_4"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\ProductDetail.vue"],"sourcesContent":["//ProductDetail.vue\r\n\r\n<template>\r\n  <div>\r\n    <h2>상품 상세</h2>\r\n    <div v-if=\"product\">\r\n      <img v-if=\"product.image\" :src=\"product.image\" alt=\"상품 이미지\" class=\"product-image\" />\r\n      <h3>{{ product.name }}</h3>\r\n      <p>{{ product.description }}</p>\r\n      <p>가격: {{ product.price }}원</p>\r\n      <p>재고: {{ product.stock }}개</p>\r\n\r\n      <!-- 구매 기능 -->\r\n      <div>\r\n        <label for=\"quantity\">구매 수량:</label>\r\n        <input v-model.number=\"quantity\" type=\"number\" id=\"quantity\" min=\"1\" :max=\"product.stock\" />\r\n      </div>\r\n      <button @click=\"purchaseProduct\">구매하기</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>상품 정보를 불러오는 중...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['id'], // 라우터에서 전달받은 상품 ID\r\n  data() {\r\n    return {\r\n      product: null, // 현재 상품 정보\r\n      quantity: 1,   // 구매 수량\r\n    };\r\n  },\r\n  methods: {\r\n    // 상품 정보 가져오기\r\n    async fetchProduct() {\r\n      try {\r\n        const response = await fetch(`/products/${this.id}`);\r\n        const data = await response.json();\r\n        this.product = data;\r\n      } catch (error) {\r\n        console.error('상품 정보를 불러오는 데 실패했습니다.', error);\r\n      }\r\n    },\r\n    // 상품 구매 처리\r\n    async purchaseProduct() {\r\n      if (this.quantity < 1 || this.quantity > this.product.stock) {\r\n        alert('구매 가능한 수량을 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('/purchase', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            productId: this.product.id,\r\n            quantity: this.quantity,\r\n          }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert('구매가 완료되었습니다.');\r\n          this.product.stock -= this.quantity; // 재고 갱신\r\n        } else {\r\n          const error = await response.json();\r\n          alert(error.message || '구매에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('구매 요청 중 오류 발생:', error);\r\n        alert('구매에 실패했습니다.');\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchProduct();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-image {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput[type='number'] {\r\n  width: 60px;\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBAGEC,mBAAA,CAmBM,c,0BAlBJC,mBAAA,CAAc,YAAV,OAAK,sBACEC,KAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAaM,OAlBVI,UAAA,GAMiBF,KAAA,CAAAC,OAAO,CAACE,KAAK,I,cAAxBL,mBAAA,CAAoF;IAN1FD,GAAA;IAMiCO,GAAG,EAAEJ,KAAA,CAAAC,OAAO,CAACE,KAAK;IAAEE,GAAG,EAAC,QAAQ;IAACC,KAAK,EAAC;0BANxEC,UAAA,KAAAC,mBAAA,gBAOMT,mBAAA,CAA2B,YAAAU,gBAAA,CAApBT,KAAA,CAAAC,OAAO,CAACS,IAAI,kBACnBX,mBAAA,CAAgC,WAAAU,gBAAA,CAA1BT,KAAA,CAAAC,OAAO,CAACU,WAAW,kBACzBZ,mBAAA,CAA+B,WAA5B,MAAI,GAAAU,gBAAA,CAAGT,KAAA,CAAAC,OAAO,CAACW,KAAK,IAAG,GAAC,iBAC3Bb,mBAAA,CAA+B,WAA5B,MAAI,GAAAU,gBAAA,CAAGT,KAAA,CAAAC,OAAO,CAACY,KAAK,IAAG,GAAC,iBAE3BL,mBAAA,WAAc,EACdT,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAoC;IAA7Be,GAAG,EAAC;EAAU,GAAC,QAAM,sB,gBAC5Bf,mBAAA,CAA4F;IAfpG,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe+BhB,KAAA,CAAAiB,QAAQ,GAAAD,MAAA;IAAEE,IAAI,EAAC,QAAQ;IAACC,EAAE,EAAC,UAAU;IAACC,GAAG,EAAC,GAAG;IAAEC,GAAG,EAAErB,KAAA,CAAAC,OAAO,CAACY;0BAf3FS,UAAA,I,cAe+BtB,KAAA,CAAAiB,QAAQ,E;IAAhBM,MAAM,EAAd;EAAyB,E,MAElCxB,mBAAA,CAA8C;IAArCyB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,MAAI,E,oBAEvC3B,mBAAA,CAEM,OArBV8B,UAAA,EAAAb,MAAA,QAAAA,MAAA,OAoBMhB,mBAAA,CAAuB,WAApB,kBAAgB,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}