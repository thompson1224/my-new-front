{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductDetail',\n  data() {\n    return {\n      product: {},\n      // 상품 정보\n      quantity: 1,\n      // 구매 수량\n      successMessage: '' // 성공 메시지\n    };\n  },\n  created() {\n    this.fetchProduct(); // 상품 정보 가져오기\n  },\n  methods: {\n    async fetchProduct() {\n      const productId = this.$route.params.id; // URL에서 상품 ID 가져오기\n      try {\n        const response = await axios.get(`http://localhost:3000/products/${productId}`);\n        this.product = response.data;\n      } catch (error) {\n        console.error('상품 정보를 가져오는 데 실패했습니다:', error);\n      }\n    },\n    async buyProduct() {\n      try {\n        const token = localStorage.getItem('token'); // 저장된 토큰 가져오기\n        const response = await axios.post('http://localhost:3000/purchase', {\n          productId: this.product.id,\n          quantity: this.quantity\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}` // 헤더에 토큰 추가\n          }\n        });\n        this.successMessage = `구매 완료! 적립된 포인트: ${response.data.pointsEarned}`;\n      } catch (error) {\n        console.error('구매에 실패했습니다:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","product","quantity","successMessage","created","fetchProduct","methods","productId","$route","params","id","response","get","error","console","buyProduct","token","localStorage","getItem","post","headers","Authorization","pointsEarned"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\ProductDetail.vue"],"sourcesContent":["//ProductDetail.vue\r\n\r\n<template>\r\n  <div>\r\n    <h1>{{ product.name }}</h1>\r\n    <img v-if=\"product.image\" :src=\"product.image\" alt=\"상품 이미지\" />\r\n    <p>가격: {{ product.price }}원</p>\r\n    <p>적립 포인트: {{ product.bonuspoint }}점</p> <!-- 적립 포인트 표시 -->\r\n\r\n    <!-- 구매 갯수 선택 -->\r\n    <div>\r\n      <label for=\"quantity\">구매 갯수:</label>\r\n      <input id=\"quantity\" v-model.number=\"quantity\" type=\"number\" min=\"1\" />\r\n    </div>\r\n\r\n    <!-- 구매 버튼 -->\r\n    <button @click=\"buyProduct\">구매하기</button>\r\n\r\n    <!-- 구매 성공 메시지 -->\r\n    <p v-if=\"successMessage\">{{ successMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProductDetail',\r\n  data() {\r\n    return {\r\n      product: {}, // 상품 정보\r\n      quantity: 1, // 구매 수량\r\n      successMessage: '', // 성공 메시지\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchProduct(); // 상품 정보 가져오기\r\n  },\r\n  methods: {\r\n    async fetchProduct() {\r\n      const productId = this.$route.params.id; // URL에서 상품 ID 가져오기\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/products/${productId}`);\r\n        this.product = response.data;\r\n      } catch (error) {\r\n        console.error('상품 정보를 가져오는 데 실패했습니다:', error);\r\n      }\r\n    },\r\n    async buyProduct() {\r\n    try {\r\n      const token = localStorage.getItem('token'); // 저장된 토큰 가져오기\r\n      const response = await axios.post(\r\n        'http://localhost:3000/purchase',\r\n        {\r\n          productId: this.product.id,\r\n          quantity: this.quantity,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // 헤더에 토큰 추가\r\n          },\r\n        }\r\n      );\r\n      this.successMessage = `구매 완료! 적립된 포인트: ${response.data.pointsEarned}`;\r\n    } catch (error) {\r\n      console.error('구매에 실패했습니다:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n"],"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MAAE;MACbC,QAAQ,EAAE,CAAC;MAAE;MACbC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,MAAME,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,kCAAkCL,SAAS,EAAE,CAAC;QAC/E,IAAI,CAACN,OAAM,GAAIU,QAAQ,CAACX,IAAI;MAC9B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC7C,MAAMP,QAAO,GAAI,MAAMb,KAAK,CAACqB,IAAI,CAC/B,gCAAgC,EAChC;UACEZ,SAAS,EAAE,IAAI,CAACN,OAAO,CAACS,EAAE;UAC1BR,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EACD;UACEkB,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;UACpC;QACF,CACF,CAAC;QACD,IAAI,CAACb,cAAa,GAAI,mBAAmBQ,QAAQ,CAACX,IAAI,CAACsB,YAAY,EAAE;MACvE,EAAE,OAAOT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}