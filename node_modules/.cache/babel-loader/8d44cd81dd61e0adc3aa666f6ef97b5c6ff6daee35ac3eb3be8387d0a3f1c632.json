{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = {\n  class: \"input-container\"\n};\nconst _hoisted_4 = {\n  class: \"input-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.signup && $options.signup(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 각 input을 div로 감싸서 세로 정렬 \"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"Email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.recommenderId = $event),\n    placeholder: \"추천인 ID (선택)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.recommenderId]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"회원가입\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","signup","_createCommentVNode","_hoisted_1","$event","$data","username","placeholder","required","_hoisted_2","email","_hoisted_3","password","type","_hoisted_4","recommenderId"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\Signup.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>회원가입</h1>\r\n    <form @submit.prevent=\"signup\">\r\n      <!-- 각 input을 div로 감싸서 세로 정렬 -->\r\n      <div class=\"input-container\">\r\n        <input v-model=\"username\" placeholder=\"Username\" required />\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input v-model=\"email\" placeholder=\"Email\" required />\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input v-model=\"password\" type=\"password\" placeholder=\"Password\" required />\r\n      </div>\r\n      <div class=\"input-container\">\r\n        <input v-model=\"recommenderId\" placeholder=\"추천인 ID (선택)\" />\r\n      </div>\r\n      <button type=\"submit\">회원가입</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserSignup',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      recommenderId: '',  // 추천인 ID 필드 추가\r\n    };\r\n  },\r\n  methods: {\r\n    async signup() {\r\n      try {\r\n        const data = {\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        };\r\n        if (this.recommenderId) {\r\n          data.recommender_id = this.recommenderId;\r\n        }\r\n\r\n        await axios.post('http://localhost:3000/signup', data);\r\n        alert('회원가입 성공');\r\n      } catch (error) {\r\n        alert('회원가입 실패');\r\n        console.error('회원가입 오류:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* input-container 클래스에 스타일 적용하여 세로로 정렬 */\r\n.input-container {\r\n  margin-bottom: 15px;  /* 각 입력 필드 간의 간격 */\r\n}\r\n\r\ninput {\r\n  width: 100%;  /* input 필드의 너비를 100%로 설정 */\r\n  padding: 10px;\r\n  margin: 5px 0; /* 입력창 간격 */\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";;EAKWA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAiB;;uBAbhCC,mBAAA,CAkBM,c,0BAjBJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAeO;IAfAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MAC3BG,mBAAA,6BAAgC,EAChCP,mBAAA,CAEM,OAFNQ,UAEM,G,gBADJR,mBAAA,CAA4D;IANpE,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMwBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjCH,KAAA,CAAAC,QAAQ,E,KAE1BX,mBAAA,CAEM,OAFNc,UAEM,G,gBADJd,mBAAA,CAAsD;IAT9D,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IASwBC,KAAA,CAAAK,KAAK,GAAAN,MAAA;IAAEG,WAAW,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAA3BH,KAAA,CAAAK,KAAK,E,KAEvBf,mBAAA,CAEM,OAFNgB,UAEM,G,gBADJhB,mBAAA,CAA4E;IAZpF,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAYwBC,KAAA,CAAAO,QAAQ,GAAAR,MAAA;IAAES,IAAI,EAAC,UAAU;IAACN,WAAW,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAjDH,KAAA,CAAAO,QAAQ,E,KAE1BjB,mBAAA,CAEM,OAFNmB,UAEM,G,gBADJnB,mBAAA,CAA2D;IAfnE,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAewBC,KAAA,CAAAU,aAAa,GAAAX,MAAA;IAAEG,WAAW,EAAC;iDAA3BF,KAAA,CAAAU,aAAa,E,+BAE/BpB,mBAAA,CAAmC;IAA3BkB,IAAI,EAAC;EAAQ,GAAC,MAAI,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}