{"ast":null,"code":"export default {\n  props: ['id'],\n  // 라우터에서 전달받은 상품 ID\n  data() {\n    return {\n      product: null,\n      // 현재 상품 정보\n      quantity: 1 // 구매 수량\n    };\n  },\n  methods: {\n    // 상품 정보 가져오기\n    async fetchProduct() {\n      try {\n        const response = await fetch(`/products/${this.id}`);\n        const data = await response.json();\n        this.product = data;\n      } catch (error) {\n        console.error('상품 정보를 불러오는 데 실패했습니다.', error);\n      }\n    },\n    // 상품 구매 처리\n    async purchaseProduct() {\n      if (this.quantity < 1 || this.quantity > this.product.stock) {\n        alert('구매 가능한 수량을 입력해주세요.');\n        return;\n      }\n      try {\n        const response = await fetch('/purchase', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            productId: this.product.id,\n            quantity: this.quantity\n          })\n        });\n        if (response.ok) {\n          alert('구매가 완료되었습니다.');\n          this.product.stock -= this.quantity; // 재고 갱신\n        } else {\n          const error = await response.json();\n          alert(error.message || '구매에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('구매 요청 중 오류 발생:', error);\n        alert('구매에 실패했습니다.');\n      }\n    }\n  },\n  created() {\n    this.fetchProduct();\n  }\n};","map":{"version":3,"names":["props","data","product","quantity","methods","fetchProduct","response","fetch","id","json","error","console","purchaseProduct","stock","alert","method","headers","body","JSON","stringify","productId","ok","message","created"],"sources":["C:\\Users\\Tm\\my-new-front\\src\\views\\ProductDetail.vue"],"sourcesContent":["//ProductDetail.vue\r\n\r\n<template>\r\n  <div>\r\n    <h2>상품 상세</h2>\r\n    <div v-if=\"product\">\r\n      <img v-if=\"product.image\" :src=\"product.image\" alt=\"상품 이미지\" class=\"product-image\" />\r\n      <h3>{{ product.name }}</h3>\r\n      <p>{{ product.description }}</p>\r\n      <p>가격: {{ product.price }}원</p>\r\n      <p>재고: {{ product.stock }}개</p>\r\n\r\n      <!-- 구매 기능 -->\r\n      <div>\r\n        <label for=\"quantity\">구매 수량:</label>\r\n        <input v-model.number=\"quantity\" type=\"number\" id=\"quantity\" min=\"1\" :max=\"product.stock\" />\r\n      </div>\r\n      <button @click=\"purchaseProduct\">구매하기</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>상품 정보를 불러오는 중...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['id'], // 라우터에서 전달받은 상품 ID\r\n  data() {\r\n    return {\r\n      product: null, // 현재 상품 정보\r\n      quantity: 1,   // 구매 수량\r\n    };\r\n  },\r\n  methods: {\r\n    // 상품 정보 가져오기\r\n    async fetchProduct() {\r\n      try {\r\n        const response = await fetch(`/products/${this.id}`);\r\n        const data = await response.json();\r\n        this.product = data;\r\n      } catch (error) {\r\n        console.error('상품 정보를 불러오는 데 실패했습니다.', error);\r\n      }\r\n    },\r\n    // 상품 구매 처리\r\n    async purchaseProduct() {\r\n      if (this.quantity < 1 || this.quantity > this.product.stock) {\r\n        alert('구매 가능한 수량을 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('/purchase', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            productId: this.product.id,\r\n            quantity: this.quantity,\r\n          }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert('구매가 완료되었습니다.');\r\n          this.product.stock -= this.quantity; // 재고 갱신\r\n        } else {\r\n          const error = await response.json();\r\n          alert(error.message || '구매에 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('구매 요청 중 오류 발생:', error);\r\n        alert('구매에 실패했습니다.');\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchProduct();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-image {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput[type='number'] {\r\n  width: 60px;\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,eAAe;EACbA,KAAK,EAAE,CAAC,IAAI,CAAC;EAAE;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MAAE;MACfC,QAAQ,EAAE,CAAC,CAAI;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,aAAa,IAAI,CAACC,EAAE,EAAE,CAAC;QACpD,MAAMP,IAAG,GAAI,MAAMK,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACP,OAAM,GAAID,IAAI;MACrB,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD;IACA,MAAME,eAAeA,CAAA,EAAG;MACtB,IAAI,IAAI,CAACT,QAAO,GAAI,KAAK,IAAI,CAACA,QAAO,GAAI,IAAI,CAACD,OAAO,CAACW,KAAK,EAAE;QAC3DC,KAAK,CAAC,oBAAoB,CAAC;QAC3B;MACF;MAEA,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMC,KAAK,CAAC,WAAW,EAAE;UACxCQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,SAAS,EAAE,IAAI,CAAClB,OAAO,CAACM,EAAE;YAC1BL,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACe,EAAE,EAAE;UACfP,KAAK,CAAC,cAAc,CAAC;UACrB,IAAI,CAACZ,OAAO,CAACW,KAAI,IAAK,IAAI,CAACV,QAAQ,EAAE;QACvC,OAAO;UACL,MAAMO,KAAI,GAAI,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;UACnCK,KAAK,CAACJ,KAAK,CAACY,OAAM,IAAK,aAAa,CAAC;QACvC;MACF,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCI,KAAK,CAAC,aAAa,CAAC;MACtB;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,YAAY,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}