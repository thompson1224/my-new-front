{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\n// router/index.js\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Login from '../views/Login.vue';\nimport Signup from '../views/Signup.vue';\nimport MainPage from '../views/MainPage.vue';\nimport ProductPage from '../views/ProductPage.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/signup',\n  name: 'Signup',\n  component: Signup\n}, {\n  path: '/main',\n  name: 'MainPage',\n  component: MainPage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/products',\n  name: 'ProductPage',\n  component: ProductPage\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 디버깅을 위한 네비게이션 가드\nrouter.beforeEach((to, from, next) => {\n  console.log('Navigation triggered:', {\n    from: from.path,\n    to: to.path\n  });\n  const token = localStorage.getItem('token');\n  console.log('Current token:', token ? 'exists' : 'not found');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    console.log('Route requires auth');\n    if (!token) {\n      console.log('No token found, redirecting to login');\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      console.log('Token found, proceeding to route');\n      next();\n    }\n  } else {\n    console.log('Route does not require auth');\n    next();\n  }\n});\nrouter.afterEach((to, from) => {\n  console.log('Navigation completed:', {\n    from: from.path,\n    to: to.path\n  });\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Login","Signup","MainPage","ProductPage","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","console","log","token","localStorage","getItem","matched","some","record","query","redirect","fullPath","afterEach"],"sources":["C:/Users/Tm/my-new-front/src/router/index.js"],"sourcesContent":["// router/index.js\r\nimport { createRouter, createWebHistory } from 'vue-router'\r\nimport HomeView from '../views/HomeView.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Signup from '../views/Signup.vue'\r\nimport MainPage from '../views/MainPage.vue'\r\nimport ProductPage from '../views/ProductPage.vue';\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'Signup',\r\n    component: Signup\r\n  },\r\n  {\r\n    path: '/main',\r\n    name: 'MainPage',\r\n    component: MainPage,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/products',\r\n    name: 'ProductPage',\r\n    component: ProductPage\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\n// 디버깅을 위한 네비게이션 가드\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log('Navigation triggered:', { from: from.path, to: to.path })\r\n  \r\n  const token = localStorage.getItem('token')\r\n  console.log('Current token:', token ? 'exists' : 'not found')\r\n  \r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    console.log('Route requires auth')\r\n    if (!token) {\r\n      console.log('No token found, redirecting to login')\r\n      next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath }\r\n      })\r\n    } else {\r\n      console.log('Token found, proceeding to route')\r\n      next()\r\n    }\r\n  } else {\r\n    console.log('Route does not require auth')\r\n    next()\r\n  }\r\n})\r\n\r\nrouter.afterEach((to, from) => {\r\n  console.log('Navigation completed:', { from: from.path, to: to.path })\r\n})\r\n\r\nexport default router"],"mappings":";;AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAGlD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,QAAQ;EACnBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BM;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;IAAEH,IAAI,EAAEA,IAAI,CAACT,IAAI;IAAEQ,EAAE,EAAEA,EAAE,CAACR;EAAK,CAAC,CAAC;EAEtE,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,GAAG,QAAQ,GAAG,WAAW,CAAC;EAE7D,IAAIL,EAAE,CAACQ,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACf,IAAI,CAACC,YAAY,CAAC,EAAE;IACvDO,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAI,CAACC,KAAK,EAAE;MACVF,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnDF,IAAI,CAAC;QACHV,IAAI,EAAE,QAAQ;QACdmB,KAAK,EAAE;UAAEC,QAAQ,EAAEZ,EAAE,CAACa;QAAS;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLV,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/CF,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CF,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEFL,MAAM,CAACiB,SAAS,CAAC,CAACd,EAAE,EAAEC,IAAI,KAAK;EAC7BE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;IAAEH,IAAI,EAAEA,IAAI,CAACT,IAAI;IAAEQ,EAAE,EAAEA,EAAE,CAACR;EAAK,CAAC,CAAC;AACxE,CAAC,CAAC;AAEF,eAAeK,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}